<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "products">

	
	<insert id="insertPrdocut" parameterType="com.sample.vo.Product">
		insert into sample_products
		(product_no, product_name, product_maker, product_category, product_price, product_discount_price)
		values
		(product_seq.nextval, #{no}, #{name}, #{maker}, #{category}, #{price}, #{discountPrice})
	</insert> 
	
	
	<delete id="deleteProduct" parameterType="int">
		delete from sample_products
		where product_no = #{value}
	</delete>
	
	
	<update id="updateProduct" parameterType="com.sample.vo.Product">
		update sample_product
		set
			product_name = #{name},
			product_maker = #{maker},
			product_category = #{category},
			product_price = #{price},
			product_discount_price = #{discountPrice}
		where product_no = {no}
	</update>
	
	<select id="getAllProducts" resultType="com.sample.vo.Product">
		select product_no as no,
			   product_name as name,
			   product_maker as maker,
			   product_category as category,
			   product_price as price,
			   product_discount_price as discountPrice,
			   product_stock as stock,
			   product_sold_out as soldOut,
			   product_create_date as createDate
	   	from sample_products
	   	order by product_no asc
	</select>
	
	<select id="getProductByNo" parameterType="int" resultType="com.sample.vo.Product">
		select product_no as no,
			   product_name as name,
			   product_maker as maker,
			   product_category as category,
			   product_price as price,
			   product_discount_price as discountPrice,
			   product_stock as stock,
			   product_sold_out as soldOut,
			   product_create_date as createDate
	   	from sample_products
	   	where product_no = #{value}
	</select>

	<select id="getProductByName" parameterType="string" resultType="com.sample.vo.Product">
		select product_no as no,
			   product_name as name,
			   product_maker as maker,
			   product_category as category,
			   product_price as price,
			   product_discount_price as discountPrice,
			   product_stock as stock,
			   product_sold_out as soldOut,
			   product_create_date as createDate
	   	from sample_products
	   	where product_name = like '%' || #{value} || '%' 
	</select>
</mapper>